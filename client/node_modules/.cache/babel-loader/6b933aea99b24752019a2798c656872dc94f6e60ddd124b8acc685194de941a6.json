{"ast":null,"code":"// openai.js (Updated)\nexport async function sendMsgToOpenAi(messages){try{// Send the messages to the backend (backend now handles OpenAI API)\nconst response=await fetch('http://localhost:5000/api/openai',{// Backend endpoint\nmethod:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({messages})// Send the messages to backend\n});if(!response.ok){throw new Error(\"Failed to fetch from backend\");}const data=await response.json();// Get the response from backend\nreturn data.text;// Assuming backend returns { text: \"Bot's response\" }\n}catch(error){console.error(\"Error communicating with OpenAI:\",error);throw error;// Rethrow the error for further handling\n}}","map":{"version":3,"names":["sendMsgToOpenAi","messages","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","text","error","console"],"sources":["C:/Documents/ChatGpt/clone/client/src/openai.js"],"sourcesContent":["// openai.js (Updated)\r\nexport async function sendMsgToOpenAi(messages) {\r\n    try {\r\n        // Send the messages to the backend (backend now handles OpenAI API)\r\n        const response = await fetch('http://localhost:5000/api/openai', { // Backend endpoint\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ messages }), // Send the messages to backend\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch from backend\");\r\n        }\r\n\r\n        const data = await response.json(); // Get the response from backend\r\n        return data.text; // Assuming backend returns { text: \"Bot's response\" }\r\n    } catch (error) {\r\n        console.error(\"Error communicating with OpenAI:\", error);\r\n        throw error; // Rethrow the error for further handling\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,eAAe,CAAAA,eAAeA,CAACC,QAAQ,CAAE,CAC5C,GAAI,CACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CAAE;AAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAS,CAAC,CAAG;AACxC,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACnD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAE;AACpC,MAAO,CAAAD,IAAI,CAACE,IAAI,CAAE;AACtB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD,KAAM,CAAAA,KAAK,CAAE;AACjB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}