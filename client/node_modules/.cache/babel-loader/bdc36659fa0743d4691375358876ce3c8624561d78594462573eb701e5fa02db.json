{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./App.css';import gptLogo from'./assets/chatgpt.svg';import addBtn from'./assets/add-30.png';import msgIcon from'./assets/message.svg';import homeIcon from'./assets/home.svg';import saveIcon from'./assets/bookmark.svg';import rocketIcon from'./assets/rocket.svg';import sendBtn from'./assets/send.svg';import userIcon from'./assets/user-icon.png';import chatGptLogo from'./assets/chatgptLogo.svg';import{sendMsgToOpenAi}from'./openai';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const msgEnd=useRef();const[input,setInput]=useState('');const[messages,setMessages]=useState([{text:\"Hello! I'm just a computer program, so I don't have feelings, but I'm here and ready to help you. How can I assist you today?\",isBot:true}]);//auto scroll to end of msgs\nuseEffect(()=>{msgEnd.current.scrollIntoView();},[messages]);const handleSend=async()=>{if(!input)return;// Prevent sending empty messages\nconst userMessage={text:input,isBot:false};// Immediately clear the input field\nsetInput('');// Update messages with user input\nsetMessages(prevMessages=>[...prevMessages,userMessage]);try{// Send the entire conversation history to OpenAI\nconst response=await sendMsgToOpenAi([...messages,userMessage]);// Append the bot's response to the conversation\nconst botMessage={text:response,isBot:true};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){console.error(\"Error communicating with OpenAI:\",error);// const errorMessage = {\n//   text: \"An error occurred while processing your message. Please try again.\",\n//   isBot: true,\n// };\n// setMessages((prevMessages) => [...prevMessages, errorMessage]);\n}// Clear input field\nsetInput('');};const handleEnter=async e=>{if(e.key==='Enter'){await handleSend();}};const handleQuery=async e=>{const text=e.target.value;setMessages([...messages,{text,isBot:false}]);const res=await sendMsgToOpenAi(text);setMessages([...messages,{text:text,isBot:false},{text:res,isBot:true}]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sideUpper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sideUpperTop\",children:[/*#__PURE__*/_jsx(\"img\",{src:gptLogo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"span\",{className:\"brand\",children:\"SmartTalk\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"midBtn\",onClick:()=>{window.location.reload();},children:[/*#__PURE__*/_jsx(\"img\",{src:addBtn,alt:\"newChat\",className:\"addBtn\"}),\"New Chat\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sideUpperBottom\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"query\",onClick:handleQuery,value:\"What is programming ?\",children:[/*#__PURE__*/_jsx(\"img\",{src:msgIcon,alt:\"query\"}),\"What is programming ?\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"query\",onClick:handleQuery,value:\"How to use an Api ?\",children:[/*#__PURE__*/_jsx(\"img\",{src:msgIcon,alt:\"query\"}),\"How to use an Api ?\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sideLower\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:homeIcon,alt:\"Home\",className:\"listItemsImg\"}),\"Home\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:saveIcon,alt:\"Saved\",className:\"listItemsImg\"}),\"Saved\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:rocketIcon,alt:\"Upgrade\",className:\"listItemsImg\"}),\"Upgrade to Pro\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chats\",children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:message.isBot?\"chat bot\":\"chat\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"chatImg\",src:message.isBot?chatGptLogo:userIcon,alt:\"\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"txt\",children:[message.text,\" \"]})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:msgEnd})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatFooter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inp\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Ask anything...\",value:input,onKeyDown:handleEnter,onChange:e=>setInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"send\",onClick:handleSend,children:/*#__PURE__*/_jsx(\"img\",{src:sendBtn,alt:\"Send\"})})]}),/*#__PURE__*/_jsx(\"p\",{children:\"SmartTalk may produce inaccurate information about people,facts,place.SmartTalk Jan 20 versionSend\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useRef","useState","gptLogo","addBtn","msgIcon","homeIcon","saveIcon","rocketIcon","sendBtn","userIcon","chatGptLogo","sendMsgToOpenAi","jsx","_jsx","jsxs","_jsxs","App","msgEnd","input","setInput","messages","setMessages","text","isBot","current","scrollIntoView","handleSend","userMessage","prevMessages","response","botMessage","error","console","handleEnter","e","key","handleQuery","target","value","res","className","children","src","alt","onClick","window","location","reload","map","message","index","ref","type","placeholder","onKeyDown","onChange"],"sources":["C:/Documents/ChatGpt/clone/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport gptLogo from './assets/chatgpt.svg'\nimport addBtn from './assets/add-30.png'\nimport msgIcon from './assets/message.svg'\nimport homeIcon from './assets/home.svg'\nimport saveIcon from'./assets/bookmark.svg'\nimport rocketIcon from './assets/rocket.svg'\nimport sendBtn from './assets/send.svg'\nimport userIcon from './assets/user-icon.png'\nimport chatGptLogo from './assets/chatgptLogo.svg'\nimport { sendMsgToOpenAi } from './openai';\n\nfunction App() {\n  const msgEnd=useRef();\n   const [input, setInput] = useState('');\n   const [messages,setMessages] = useState([\n    {\n      text: \"Hello! I'm just a computer program, so I don't have feelings, but I'm here and ready to help you. How can I assist you today?\",\n      isBot: true\n    }\n   ])\n//auto scroll to end of msgs\n   useEffect(()=>{\n      msgEnd.current.scrollIntoView();\n   },[messages])\n\n\n   const handleSend=async()=>{\n    if (!input) return; // Prevent sending empty messages\n\n    const userMessage = { text: input, isBot: false };\n     // Immediately clear the input field\n      setInput('');\n  // Update messages with user input\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n  try {\n    // Send the entire conversation history to OpenAI\n    const response = await sendMsgToOpenAi([...messages, userMessage]);\n\n    // Append the bot's response to the conversation\n    const botMessage = { text: response, isBot: true };\n    setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n        console.error(\"Error communicating with OpenAI:\", error);\n        // const errorMessage = {\n        //   text: \"An error occurred while processing your message. Please try again.\",\n        //   isBot: true,\n        // };\n       // setMessages((prevMessages) => [...prevMessages, errorMessage]);\n    }\n\n    // Clear input field\n    setInput('');\n   }\n     const handleEnter=async(e)=>{\n        if(e.key==='Enter'){\n          await handleSend()\n        }\n     }\n     const handleQuery=async(e)=>{\n      const text=e.target.value;\n      setMessages([\n        ...messages,\n        {text,isBot:false}\n      ])\n      const res = await sendMsgToOpenAi(text);\n       setMessages([\n        ...messages,\n        {text:text,isBot:false},\n        {text:res,isBot:true},\n       ])\n     }\n  return (\n        <div className='App'>\n          {/* left side part */}\n             <div className='sidebar'>\n                  <div className='sideUpper'>\n                      <div className='sideUpperTop'> \n                         <img src={gptLogo} alt=\"Logo\" className='logo'/>\n                         <span className='brand'>SmartTalk</span>\n                       </div>\n                        <button className='midBtn' onClick={()=>{window.location.reload()}}>\n                            <img src={addBtn}alt='newChat' className='addBtn'/>\n                            New Chat\n                        </button>\n                    \n\n                      <div className='sideUpperBottom'>\n                           <button className=\"query\" onClick={handleQuery} value={\"What is programming ?\"}><img src={msgIcon} alt=\"query\" />What is programming ?</button>\n                           <button className=\"query\" onClick={handleQuery} value={\"How to use an Api ?\"}><img src={msgIcon} alt=\"query\" />How to use an Api ?</button>\n                      </div>\n\n                  </div>\n                  <div className='sideLower'>\n                        <div className=\"listItems\"><img src={homeIcon} alt=\"Home\" className=\"listItemsImg\" />Home</div>\n                        <div className=\"listItems\"><img src={saveIcon} alt=\"Saved\" className=\"listItemsImg\" />Saved</div>\n                        <div className=\"listItems\"><img src={rocketIcon} alt=\"Upgrade\" className=\"listItemsImg\" />Upgrade to Pro</div>\n                  </div>\n             </div>\n             {/* right side part */}\n             <div className='main'>\n              {/* where the output will show */}\n                  <div className=\"chats\">\n                      \n                      {\n                        messages.map((message,index)=>(\n                          <div key={index} className={message.isBot? \"chat bot\": \"chat\"}>\n                            <img className='chatImg' src={message.isBot? chatGptLogo:userIcon} alt=\"\" />\n                            <p className=\"txt\">{message.text} </p>\n                          </div>\n                        ))\n                      }\n                    <div ref={msgEnd}/>\n                  </div>\n                  {/* below user input part */}\n                  <div className=\"chatFooter\">\n                      <div className=\"inp\">\n                          <input type='text' placeholder='Ask anything...'\n                           value={input}\n                           onKeyDown={handleEnter}\n                          onChange={(e)=>setInput(e.target.value)}/>\n                          <button className=\"send\" onClick={handleSend}><img src={sendBtn} alt=\"Send\" /></button>\n                      </div>\n                      <p>SmartTalk may produce inaccurate information about people,facts,place.SmartTalk Jan 20 versionSend</p>\n                  </div>\n             </div>\n             \n        </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}