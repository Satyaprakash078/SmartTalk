{"ast":null,"code":"// openai.js (Updated)\nexport async function sendMsgToOpenAi(messages) {\n  try {\n    // Send the messages to the backend (backend now handles OpenAI API)\n    const response = await fetch('/api/openai', {\n      // Backend endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        messages\n      }) // Send the messages to backend\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch from backend\");\n    }\n    const data = await response.json(); // Get the response from backend\n    return data.text; // Assuming backend returns { text: \"Bot's response\" }\n  } catch (error) {\n    console.error(\"Error communicating with OpenAI:\", error);\n    throw error; // Rethrow the error for further handling\n  }\n}","map":{"version":3,"names":["sendMsgToOpenAi","messages","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","text","error","console"],"sources":["C:/Documents/ChatGpt/clone/client/src/openai.js"],"sourcesContent":["// openai.js (Updated)\r\nexport async function sendMsgToOpenAi(messages) {\r\n    try {\r\n        // Send the messages to the backend (backend now handles OpenAI API)\r\n        const response = await fetch('/api/openai', { // Backend endpoint\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ messages }), // Send the messages to backend\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch from backend\");\r\n        }\r\n\r\n        const data = await response.json(); // Get the response from backend\r\n        return data.text; // Assuming backend returns { text: \"Bot's response\" }\r\n    } catch (error) {\r\n        console.error(\"Error communicating with OpenAI:\", error);\r\n        throw error; // Rethrow the error for further handling\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,eAAeA,CAACC,QAAQ,EAAE;EAC5C,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAS,CAAC,CAAC,CAAE;IACxC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOD,IAAI,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}